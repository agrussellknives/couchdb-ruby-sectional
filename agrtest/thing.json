{"_id":"_design/agrtest","_rev":"216-fbb1c03166120b9c491f5a0caa1d1e93","vendor":{"couchapp":{"README":"## CouchApp - more than just a filesystem mapper\n\nThis is where documentation will go for the client and server JavaScript parts of CouchApp.","template":"// Simple JavaScript Templating\n// John Resig - http://ejohn.org/ - MIT Licensed\nvar cache = {};\n\nfunction template(str, data){\n  // Figure out if we're getting a template, or if we need to\n  // load the template - and be sure to cache the result.\n  var fn = cache[str] ||\n\n  // Generate a reusable function that will serve as a template\n  // generator (and which will be cached).\n    new Function(\"obj\",\n      \"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n          \n            // Introduce the data as local variables using with(){}\n            \"with(obj){p.push('\" +\n          \n            // Convert the template into pure JavaScript\n            str\n            .replace(/\\n/g, \"\\\\n\")\n            .replace(/[\\r\\t]/g, \" \")\n            .replace(/'(?=[^%]*%>)/g,\"\\t\")\n            .split(\"'\").join(\"\\\\'\")\n            .split(\"\\t\").join(\"'\")\n            .replace(/<%=(.+?)%>/g, \"',$1,'\")\n            .split(\"<%\").join(\"');\")\n            .split(\"%>\").join(\"p.push('\")\n            + \"');}return p.join('');\");\n  cache[str] = fn;\n  \n  // Provide some basic currying to the user\n  return data ? fn( data ) : fn;\n};","date":"function f(n) {    // Format integers to have at least two digits.\n    return n < 10 ? '0' + n : n;\n}\n\nDate.prototype.rfc3339 = function() {\n    return this.getUTCFullYear()   + '-' +\n         f(this.getUTCMonth() + 1) + '-' +\n         f(this.getUTCDate())      + 'T' +\n         f(this.getUTCHours())     + ':' +\n         f(this.getUTCMinutes())   + ':' +\n         f(this.getUTCSeconds())   + 'Z';\n};\n\n// This is a format that collates in order and tends to work with\n// JavaScript's new Date(string) date parsing capabilities, unlike rfc3339.\nDate.prototype.toJSON = function() {\n    return this.getUTCFullYear()   + '/' +\n         f(this.getUTCMonth() + 1) + '/' +\n         f(this.getUTCDate())      + ' ' +\n         f(this.getUTCHours())     + ':' +\n         f(this.getUTCMinutes())   + ':' +\n         f(this.getUTCSeconds())   + ' +0000';\n};","path":"// from couch.js\nfunction encodeOptions(options, noJson) {\n  var buf = []\n  if (typeof(options) == \"object\" && options !== null) {\n    for (var name in options) {\n      if (!options.hasOwnProperty(name)) continue;\n      var value = options[name];\n      if (!noJson && (name == \"key\" || name == \"startkey\" || name == \"endkey\")) {\n        value = toJSON(value);\n      }\n      buf.push(encodeURIComponent(name) + \"=\" + encodeURIComponent(value));\n    }\n  }\n  if (!buf.length) {\n    return \"\";\n  }\n  return \"?\" + buf.join(\"&\");\n}\n\nfunction concatArgs(array, args) {\n  for (var i=0; i < args.length; i++) {\n    array.push(args[i]);\n  };\n  return array;\n};\n\nfunction makePath(array) {\n  var options, path;\n  \n  if (typeof array[array.length - 1] != \"string\") {\n    // it's a params hash\n    options = array.pop();\n  }\n  path = array.map(function(item) {return encodeURIComponent(item)}).join('/');\n  if (options) {\n    return path + encodeOptions(options);\n  } else {\n    return path;    \n  }\n};\n\nfunction assetPath() {\n  var p = req.path, parts = ['', p[0], p[1] , p[2]];\n  return makePath(concatArgs(parts, arguments));\n};\n\nfunction showPath() {\n  var p = req.path, parts = ['', p[0], p[1] , p[2], '_show'];\n  return makePath(concatArgs(parts, arguments));\n};\n\nfunction listPath() {\n  var p = req.path, parts = ['', p[0], p[1] , p[2], '_list'];\n  return makePath(concatArgs(parts, arguments));\n};\n\nfunction olderPath(info) {\n  if (!info) return null;\n  var q = req.query;\n  q.startkey = info.prev_key;\n  q.skip=1;\n  return listPath('index','recent-posts',q);\n}\n\nfunction makeAbsolute(req, path) {\n  return 'http://' + req.headers.Host + path;\n}\n\n\nfunction currentPath() {\n  path = req.path.map(function(item) {return encodeURIComponent(item)}).join('/');\n  if (req.query) {\n    return path + encodeOptions(req.query, true);\n  } else {\n    return path;\n  }\n}","couchapp":"// this stuff should be properly namespaced etc\n","metadata":{"name":"couchapp","description":"Official couchapp vendor."}}},"lib":{},"language":"ruby","views":{"presentation_type_list":{"map":"lambda do |item|\n  return unless item.has_key? 'presentations'\n  item['presentations'].each_value do |p|\n    emit(p['type'],nil)\n  end\nend","reduce":"lambda do |keys, values, rereduce|\n  return values.size unless rereduce\n  return values.inject(0) { |sum,item| sum + item }\nend"},"presentation_by_sequence":{"map":"lambda do |item|\n  # update me!\n  # 2010-08-26T13:48:52.342145\n  holder = {}\n  keycodes = item['keycodes'] || {}\n  master_item = item.clone\n  \n  master_item.delete('keycodes')\n  master_item.delete('presentations')\n\n  return unless item.has_key? 'presentations'\n  \n  \n  fields = JSON.parse('{\n  \t\"fields\" : {\n  \t\t\"category\" : [\n  \t\t\t\"images\",\n  \t\t\t\"sequence\",\n  \t\t\t\"short_desc\",\n  \t\t\t\"headline\",\n  \t\t\t\"price\",\n  \t\t\t\"_id\",\n  \t\t\t\"short_option_name\",\n  \t\t\t\"link\",\n  \t\t\t\"active\"\n  \t\t\t],\n  \t\t\"single_product\" : [\n  \t\t\t\"images\",\n  \t\t\t\"subhead\",\n  \t\t\t\"description\",\n  \t\t\t\"detailed_description\",\n  \t\t\t\"_id\",\n  \t\t\t\"option_name\",\n  \t\t\t\"specs\"\n  \t\t\t],\n  \t\t\"search\" : \"category\",\n  \t\t\"multi-product\" : \"single_product\"\n  \t},\n  \t\"filters\" : {\n  \t\t\"category\": [\n  \t\t\t\"active == true\"\n  \t\t]\n  \t},\n  \t\"sort\" : {\n  \t\t\"category\" : [\"sequence\"]\n  \t}\n  }')\n  \n   \n  # collate all non-keycode presentations under DEFAULT\n  keycodes['DEFAULT'] = item['presentations'].clone\n  \n  keycodes.each do |keycode,presentations|\n    presentations.each do |key, overrides|\n        val = {}\n        display_fields = fields[overrides['type']]\n        if display_fields == nil then display_fields = master_item.keys end\n        into = Hash[ master_item.collect do |k,v|\n           if not k =~ /^_(?!id)/ and display_fields.include? k then\n            overrides.has_key?(k) ? (next k,overrides[k]) : (next k,v)\n          end\n        end ]\n        \n        seq = overrides['sequence'] || master_item['sequence'] || 0\n        # place \"self presenters\" directly into the value hash, and retrieve all of their information\n        if master_item['_id'] == key then\n          val = master_item\n          seq = nil \n          val['_id'] = master_item['type']\n        else \n          val[overrides['type']] = into \n        end\n            \n        #begin\n        #  condition_tests = conditions[overrides['type']]\n        #  results = condition_tests.map do |proc|\n        #    proc.call into\n        #  end\n        #  next if results.include? false\n        #rescue => e\n        #  log e\n        #end\n        \n        emit([key,keycode,seq],val)\n    end\n  end\nend\n"},"category_list":{"map":"lambda do |item|\n  if item['type'] == 'category' then\n    emit item['_id'], nil\n  end\nend"}},"fixture":{"docs":[{"comment":"test case 1","content":"<b>I am an article.</b>","_id":"article1","presentations":{"article1":{"type":"article"}}},{"comment":"test case 2","content":"<b> I am an articles</b>","_id":"item-which-appears-on-an-article-page","presentations":{"article1":{"type":"single-product"}}},{"comment":"test case 3","image":"single","_id":"item-which-appears-in-both-multi-and-single","presentations":{"multi-product-which-contains-item-which-also-appears-in-single":{"type":"multi-product"},"single-product-which-contains-item-which-also-appears-in-multi":{"type":"single-product"}},"spam":"andeggs"},{"comment":"test case 4 & 5","_id":"item-with-layouts","foo":"bar","presentations":{"item-with-custom-layout-single":{"layout":"custom","type":"single-product"},"item-with-standard-layout-single":{"type":"single-product"}}},{"comment":"test case 6,7,8","copy":"this","_id":"item-in-categories","price":"1","presentations":{"category1":{"type":"category"},"category3":{"price":"2","type":"category"},"category2":{"type":"category"},"category4":{"copy":"that","type":"category"}}},{"comment":"test case 9","images":"image2.jpg","_id":"item-with-single-image","presentations":{"item-with-single-image":{"type":"single-product"}}},{"comment":"test case 10","images":["image1.jpg","image2.jpg"],"_id":"item-with-multiple-images","presentations":{"item-with-multiple-images":{"type":"single-product"}}},{"comment":"test case 11-16","copy":"item1","_id":"item1-multi-copy-multi-image","image":"item1.jpg","presentations":{"multi-item-with-multiple-group-images-and-individuals":{"type":"multi-product"},"multi-item-with-single-image-multiple-copy":{"image":null,"type":"multi-product"},"multi-item-with-single-image-mixed-copy":{"image":null,"type":"multi-product"},"multi-item-with-single-image-single-copy":{"image":null,"copy":null,"type":"multi-product"},"multi-item-with-multiple-group-images":{"image":null,"type":"multi-product"},"multi-item-with-image-for-each-knife":{"type":"multi-product"}}},{"comment":"test case 11-16","copy":"item2","_id":"item2-multi-copy-multi-image","image":"item2.jpg","presentations":{"multi-item-with-multiple-group-images-and-individuals":{"type":"multi-product"},"multi-item-with-single-image-multiple-copy":{"image":null,"type":"multi-product"},"multi-item-with-single-image-mixed-copy":{"image":null,"type":"multi-product"},"multi-item-with-single-image-single-copy":{"image":null,"copy":null,"type":"multi-product"},"multi-item-with-multiple-group-images":{"image":null,"type":"multi-product"},"multi-item-with-image-for-each-knife":{"type":"multi-product"}}},{"comment":"test case 11-16","copy":"item3","_id":"item3-multi-copy-multi-image","image":"item3.jpg","presentations":{"multi-item-with-multiple-group-images-and-individuals":{"type":"multi-product"},"multi-item-with-single-image-multiple-copy":{"image":null,"type":"multi-product"},"multi-item-with-single-image-mixed-copy":{"image":null,"copy":null,"type":"multi-product"},"multi-item-with-single-image-single-copy":{"image":null,"copy":null,"type":"multi-product"},"multi-item-with-multiple-group-images":{"image":null,"type":"multi-product"},"multi-item-with-image-for-each-knife":{"type":"multi-product"}}},{"comment":"test case 11","image":"image1.jpg","_id":"multi-item-with-single-image-multiple-copy","presentations":{"multi-item-with-single-image-multiple-copy":{"type":"multi-product"}}},{"comment":"test case 12 and 17","image":"single-image.jpg","_id":"multi-item-with-single-image-single-copy","copy":"single-copy","presentations":{"category1":{"type":"category"},"multi-item-with-single-image-single-copy":{"type":"multi-product"},"category2":{"type":"category"}}},{"comment":"test case 15","images":["image1.jpg","image2.jpg","image3.jpg"],"_id":"multi-item-with-multiple-group-images","presentations":{"multi-item-with-multiple-group-images":{"type":"multi-product"}}},{"comment":"test case 16","images":["groupimage1.jpg","groupimage2.jpg"],"_id":"multi-item-with-multiple-group-images-and-individuals","presentations":{"multi-item-with-multiple-group-images-and-individuals":{"type":"multi-product"}}},{"comment":"test case 18-24","_id":"item1-of-group","name":"item1","presentations":{"multi-item-group1-2-3-attributes":{"type":"multi-product","name":"item1-replaced"},"multi-item-group1-2":{"type":"multi-product"},"item1-of-group-same-attributes":{"type":"single-product"},"multi-item-group1-3":{"type":"multi-product"},"multi-item-group1-2-3":{"type":"multi-product"},"multi-item-group1-2-3-custom-layout":{"layout":"custome","type":"single-product"},"item1-of-group-different-attributes":{"type":"single-product","name":"item1-single-replaced"}}},{"comment":"test case 18-20, 24","_id":"item2-of-group","name":"item2","presentations":{"multi-item-group1-2-3":{"type":"multi-product"},"multi-item-group1-2-3-attributes":{"type":"multi-product"},"multi-item-group2-3":{"type":"multi-product"},"multi-item-group1-2":{"type":"multi-product"},"multi-item-group1-2-3-custom-layout":{"layout":"custome","type":"single-product"}}},{"comment":"test case 18-20, 24","_id":"item3-of-group","name":"item3","presentations":{"multi-item-group1-2-3":{"type":"multi-product"},"multi-item-group1-2-3-attributes":{"type":"multi-product","name":"item3-replaced"},"multi-item-group1-2-3-custom-layout":{"layout":"custome","type":"single-product"},"multi-item-group2-3":{"type":"multi-product"},"multi-item-group1-3":{"type":"multi-product"}}},{"comment":"does not appear in hierarchy - tase case 31","_id":"category4","foo":"bar4","presentations":{"category4":{"type":"category4"}}},{"comment":"test case 32","_id":"page-category","layout":"page-like","foo":"bar-page","presentations":{"page-category":{"type":"category"}}},{"_id":"category1","foo":"bar","presentations":{"category1":{"type":"category"},"special-category2":{"type":"category"}}},{"_id":"category2","foo":"bar2","presentations":{"category1":{"type":"sub-category"},"category2":{"type":"category"}}},{"comment":"test case 35, 33","_id":"category3","foo":"bar3","presentations":{"category1":{"type":"sub-category"},"category3":{"type":"category"},"special_category":{"type":"category"}}},{"comment":"test case 33","_id":"item-in-categories-1-and-2","name":"item-in-categories-1-and-2","presentations":{"category1":{"type":"category"},"category2":{"type":"category"}}},{"_id":"special-category","name":"special-category","presentations":{"special-category":{"type":"category"}}},{"_id":"special-category2","name":"special-category2","presentations":{"special-category2":{"type":"category"}}},{"_id":"special-category-with-custom-layout","layout":"custom-special-category","presentations":{"special-category-with-custom-layout":{"type":"category"}}},{"_id":"simple-single-item-id","link":"simple-single-item","name":"simple-single-item","presentations":{"simple-multi-item":{"type":"multi-product"},"simple-single-item":{"type":"single-product"},"special-category":{"type":"category"},"special-category2":{"type":"category"}}},{"_id":"simple-multi-item-id","link":"simple-multi-item","presentations":{"simple-multi-item":{"type":"single-product"}},"key":"value"},{"_id":"simple-multi-item","name":"simple-multi-item","presentations":{"category1":{"type":"category"},"special-category2":{"type":"category"},"special-category":{"type":"category"}}},{"comment":"test 42","_id":"searchable-article","presentations":{"agr-search":{"type":"search"}}},{"comment":"test 43","_id":"searchable-category","presentations":{"agr-search":{"type":"search"},"searchable-category":{"type":"category"}}},{"comment":"test 45","_id":"searchable-single-and-multi-item","presentations":{"agr-search":{"type":"search"},"searchable-multi-item":{"type":"multi-product"}}},{"comment":"test 47","_id":"searchable-multi-item","presentations":{"searchable-multi-item2":{"type":"multi-product"},"searchable-multi-item":{"type":"multi-product"}}},{"comment":"test 46","_id":"searchable-single-item-with-changed-attribute","foo":"bar","presentations":{"agr-search":{"foo":"baz","type":"search"}}},{"comment":"test 45,47","_id":"searchable-multi-item","presentations":{"searchable-multi-item":{"type":"single-product"},"agr-search":{"type":"search"}}},{"comment":"test 47","_id":"searchable-multi-item2","presentations":{"searchable-multi-item2":{"type":"multi-product"},"agr-search":{"type":"search"}}}]},"lists":{"collate":"lambda do |head,req|\n  start({:headers => {:content_type => 'application/json'}})\n  accumulator = {}\n  thing = \"\"\n  while row = get_row do\n    row = row['value']\n    if row.has_key? '_id' then\n      row.keys.each do |k|\n        accumulator[k] = row[k] if not k =~ /^_/\n      end\n    else   \n      row.keys.each do |k|\n        accumulator[k] = [] if not accumulator.has_key? k\n        accumulator[k].push row[k]\n      end\n    end\n  end\n  send accumulator.to_json\n  false\nend\n      \n"},"design":{},"transforms":{"collate":"lambda do |head,req|\n  rows = []\n  row = get_row\n  collated_row = nil\n  while row = get_row do\n    if not collated_row then collated_row = {} end\n      \n    if collated_row then\n      if collated_row['_id'] == row['key'][0..1] then        \n        # add presentation master fields to base object\n        if row['key'][2] == nil then\n          collated_row = collated_row.merge(row['value'])\n        end\n        \n        # add value of each row to collated structure\n        row['value'].keys.each do |type|\n          if not collated_row.keys.include? type then\n            collated_row[type] = []\n          end\n          collated_row[type] << row['value'][type]\n        end\n      else # we have gotten a different key\n        send collated_row.to_json\n        collated_row = nil\n        redo\n      end\n    end\n  end\nend "},"couchapp":{"manifest":["autoviews/","autoviews/autoview.json","couchapp.json","design/","fixture.json","language","lib/","lists/","lists/collate.rb","shows/","transforms/","transforms/collate.rb","updates/","vendor/","vendor/couchapp/","vendor/couchapp/couchapp.js","vendor/couchapp/date.js","vendor/couchapp/metadata.json","vendor/couchapp/path.js","vendor/couchapp/README.md","vendor/couchapp/template.js","views/","views/category_list/","views/category_list/map.rb","views/presentation_by_sequence/","views/presentation_by_sequence/map.rb","views/presentation_type_list/","views/presentation_type_list/map.rb","views/presentation_type_list/reduce.rb"],"signatures":{"index.html":"6f4a8fdc19ae3b884af450355b73a37f","style/main.css":"0bfa79600a3ae1c190142ddc8c0a95a8","vendor/couchapp/jquery.couchapp.js":"fa2c39d8fc59ebc714bd2f7d26fad0b6"},"name":"AGR Test","objects":{"57c6f733719b39871d2634357a8e9046":"lambda do |item|\n  # update me!\n  # !stamp\n  holder = {}\n  keycodes = item['keycodes'] || {}\n  master_item = item.clone\n  \n  master_item.delete('keycodes')\n  master_item.delete('presentations')\n\n  return unless item.has_key? 'presentations'\n  \n  \n  fields = JSON.parse('{\n  \t\"fields\" : {\n  \t\t\"category\" : [\n  \t\t\t\"images\",\n  \t\t\t\"sequence\",\n  \t\t\t\"short_desc\",\n  \t\t\t\"headline\",\n  \t\t\t\"price\",\n  \t\t\t\"_id\",\n  \t\t\t\"short_option_name\",\n  \t\t\t\"link\",\n  \t\t\t\"active\"\n  \t\t\t],\n  \t\t\"single_product\" : [\n  \t\t\t\"images\",\n  \t\t\t\"subhead\",\n  \t\t\t\"description\",\n  \t\t\t\"detailed_description\",\n  \t\t\t\"_id\",\n  \t\t\t\"option_name\",\n  \t\t\t\"specs\"\n  \t\t\t],\n  \t\t\"search\" : \"category\",\n  \t\t\"multi-product\" : \"single_product\"\n  \t},\n  \t\"filters\" : {\n  \t\t\"category\": [\n  \t\t\t\"active == true\"\n  \t\t]\n  \t},\n  \t\"sort\" : {\n  \t\t\"category\" : [\"sequence\"]\n  \t}\n  }')\n  \n   \n  # collate all non-keycode presentations under DEFAULT\n  keycodes['DEFAULT'] = item['presentations'].clone\n  \n  keycodes.each do |keycode,presentations|\n    presentations.each do |key, overrides|\n        val = {}\n        display_fields = fields[overrides['type']]\n        if display_fields == nil then display_fields = master_item.keys end\n        into = Hash[ master_item.collect do |k,v|\n           if not k =~ /^_(?!id)/ and display_fields.include? k then\n            overrides.has_key?(k) ? (next k,overrides[k]) : (next k,v)\n          end\n        end ]\n        \n        seq = overrides['sequence'] || master_item['sequence'] || 0\n        # place \"self presenters\" directly into the value hash, and retrieve all of their information\n        if master_item['_id'] == key then\n          val = master_item\n          seq = nil \n          val['_id'] = master_item['type']\n        else \n          val[overrides['type']] = into \n        end\n            \n        #begin\n        #  condition_tests = conditions[overrides['type']]\n        #  results = condition_tests.map do |proc|\n        #    proc.call into\n        #  end\n        #  next if results.include? false\n        #rescue => e\n        #  log e\n        #end\n        \n        emit([key,keycode,seq],val)\n    end\n  end\nend\n"},"description":"AGR Testing"},"autoviews":{"autoview":{"sort":{"category":["sequence"]},"fields":{"category":["images","sequence","short_desc","headline","price","_id","short_option_name","link","active"],"multi-product":"single_product","search":"category","single_product":["images","subhead","description","detailed_description","_id","option_name","specs"]},"filters":{"category":["active == true"]}}},"updates":{},"shows":{},"_attachments":{"index.html":{"content_type":"text/html","revpos":216,"length":413,"stub":true},"style/main.css":{"content_type":"text/css","revpos":216,"length":21,"stub":true},"vendor/couchapp/jquery.couchapp.js":{"content_type":"application/javascript","revpos":216,"length":6949,"stub":true}}}
